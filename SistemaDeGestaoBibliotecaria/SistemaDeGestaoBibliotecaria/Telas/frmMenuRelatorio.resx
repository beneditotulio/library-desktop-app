<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAXhJREFUWEftlUEuREEQQL/F2LHBhsSCO5AgrNyBhGs4gCBcwco5WLiBYCE4AII1
        O7z60yU9rTtd078XEl7y8qv7V9WvmfmTbv75zXwWeIETWIXYAyze4jR2Rhta8Ye4wknsROkA1+56h52+
        idIBptAfYgaLKB1A8Ie4x6IhSgeIeYNDo8VW/AfGHJriwoC/NcAorvXDb6oPsO6uISN4gm+4IBuOqgNs
        4wfutqtB9lBrXnEehVgfE2HhIsqnkz0ZYgOVTZS9qvgDzOIjylr+03J9xyVcdrHmVsMfYAclPkV50eS3
        lvUzvrj4GBWttZgkTNjC8X7YDnGOmnOGPVR032KSXMIYyrF76WKfbHPI5liayJs+1w8HsNRmcyxNUlhq
        szmWJikstdkcS5MUltpsjqVJCkttNsfSJIWlNpujCRaV2L1QJVz/wC/KqcTuhSrhugpPKE1X2tUgepbI
        vVUXP2BVjlA/mcV9rIqcEYcoh1TsgarcP2iapvcFzbEPqZUXp+8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAoZJREFUWEftl81q1FAYhodSqFBrBS0oKLjQKgjWqrjXCxBFb6SCUHUnKC5KxY3g
        D4ILvQDdWKsb9QZ0oVYXitqFopv6v9Dj8yZvQtIz6WTGiAh94GHC+33nzJCcJGday/xXhBC24gl8gHP4
        wer4Ph7HUbc3B5Puwlmsywzu9PDeYZJ+PI8/UbzDS3gQt+OI1fEhvIzvUWjMNPZ7uu5g4Gq8g+I7nsEh
        lyuhZxWe9RihszHscj0YMIAPNRpe4g6XasOYMY8VWjMDLnWGZp1m8QY3OO4axm7EeU0EFxwvDY178Rd+
        wXHHPcMce/Cr59ztuBqa7qI45agEeeU6qKqRn9aEMOOoPTToPhe6t6PJyLSqX+EmRznKXJt2lEM2jB9R
        bHEcQ/Fk2hMuOsohG8SnSTX9XOeSauudCX0OupRDdiWphjDpKIbivbQnHHBUglz3/OOkw2fC6lioNuL2
        EuR6TohZRzEUX6Q9YbOjCGrFH/HWisovF9SyyzvnKIbip7QnrHTUFur6Ec+SzhQdV365oD6UdIaw4CiG
        4ue0J76GRajrtOsZkaHjaGEWoV7rBzxPe6pXKrXiNX9iRdu7I4PatqSLReoohmKnRRgtOFtamG4vQV5r
        ER5Le8JVRzlkf3obXkuqIRx1FEOx04NoAh9htOCUoc7EhKMcsnoPIkFDtvFo8lGsV7m47agamsZRm4km
        X0bfPOeY46Wh8RyKJl/HU447Q3Mf3kqGpethn0u1Ycx+jxU3sc+lejBAC6e4JZvCNS5XQs9a1FvzB4ru
        t2QZDFy8KV3A63gYR3GF1fERvIHqERqjS9nbprQIk/ybbflimLT4x+Q16jRLHeuPiWrN/zFZ5u/Rav0G
        gtGBxo/m/mYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="button4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>